<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CRC32算法 - 标签 - tcc0lin&#39;s security blog</title>
        <link>http://localhost:1313/tags/crc32%E7%AE%97%E6%B3%95/</link>
        <description>CRC32算法 - 标签 - tcc0lin&#39;s security blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 09 May 2023 22:36:47 &#43;0800</lastBuildDate><atom:link href="http://localhost:1313/tags/crc32%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>理解CRC32算法</title>
    <link>http://localhost:1313/%E7%90%86%E8%A7%A3crc32%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>http://localhost:1313/%E7%90%86%E8%A7%A3crc32%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[<h3 id="一crc算法概述" class="headerLink">
    <a href="#%e4%b8%80crc%e7%ae%97%e6%b3%95%e6%a6%82%e8%bf%b0" class="header-mark"></a>一、CRC算法概述</h3><blockquote>
  <p>循环冗余校验（Cyclic Redundancy Check， CRC）是一种根据网络数据包或计算机文件等数据产生简短固定位数校验码的一种信道编码技术，主要用来检测或校验数据传输或者保存后可能出现的错误。它是利用除法及余数的原理来作错误侦测的。 &ndash;–维基百科</p>]]></description>
</item><item>
    <title>探讨关于CRC32算法的魔改方式</title>
    <link>http://localhost:1313/%E6%8E%A2%E8%AE%A8%E5%85%B3%E4%BA%8Ecrc32%E7%AE%97%E6%B3%95%E7%9A%84%E9%AD%94%E6%94%B9%E6%96%B9%E5%BC%8F/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>http://localhost:1313/%E6%8E%A2%E8%AE%A8%E5%85%B3%E4%BA%8Ecrc32%E7%AE%97%E6%B3%95%E7%9A%84%E9%AD%94%E6%94%B9%E6%96%B9%E5%BC%8F/</guid>
    <description><![CDATA[<ul>
<li>写法
<ul>
<li>函数名</li>
</ul>
</li>
<li>算法常量
<ul>
<li>CRC码表</li>
<li>多项式的二进制</li>
</ul>
</li>
<li>算法流程
<ul>
<li>CRC码表生成方式</li>
</ul>
</li>
</ul>]]></description>
</item></channel>
</rss>
